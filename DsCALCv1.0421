<!-- /* 
 
 * -->

<!doctype html>
<html>
<meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0" />

<body class="body">
  <style>
    /* Hide Input Number Arrows Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    /* Firefox */
    input[type=number] {
      -moz-appearance: textfield;
    }

    html,
    body {
      margin: 0px;
      height: 100%;
    }

    :root {
      /*colors in RGB! POZOR na medzery medzi ciarkami v rgb() */
      --body_width: 300px;
      --body_backgroundColor: var(--body_backgroundColor1);
      --font_color: var(--font_color1);
      --font_size: 0.8rem;
      /*12px*/

      --input_height: 30px;
      --INPUTwide_width: 100px;
      --input_font-size: 0.8rem;
      /*14px*/

      --TABLEmargin: 20px 0px 5px 0px;
      /* 7px 0px 7px 0px; */
      --TABLE_border_color: var(--border_color1);
      --TABLE_backgroundColor: var(--body_backgroundColor);




      --border_color: var(--border_color1);
      --border_radius: 10px;
      --border_radius_THtop: 10px 10px 0px 0px;

      --th_backgroundColor: var(--th_backgroundColor1);
      --th_Color: var(--th_Color1);
      --th_info_height: 20px;
      /* table: info + stenen per pers*/
      --th_height: 20px;
      --td_height: 22px;

      --button_pers_Color: var(--button_pers_Color1);
      --button_Color: var(--button_Color1);

      
              --styleBorder_Color:var(--button_Color1);


      --td_info_backgroundColor: var(--td_info_backgroundColor1);

--background-image3D: linear-gradient(#ffffff63, var(--th_backgroundColor) 5px, var(--th_backgroundColor)); /* none; default none a potom cez switch/script to zmen na > linear-gradient(#ffffff63, var(--th_backgroundColor) 5px, var(--th_backgroundColor));
*/
      /* ------------THEME1-------------------------*/
      --body_backgroundColor1: rgb(47, 59, 109);
      --font_color1: rgb(212, 212, 212);

      --border_color1: rgb(136, 136, 136);

      --th_backgroundColor1: rgb(42, 246, 162);
      --th_Color1: rgb(47, 59, 109);

      --button_pers_Color1: rgb(136, 136, 136);
      --button_Color1: rgb(42, 246, 162);
      --td_info_backgroundColor1: var(--body_backgroundColor);
      /*rgb(212, 212, 212); */

      --TABLE_border_color1: var(--border_color1);
      --table_backgroundColor1:var(--body_backgroundColor);

      
      /* ------------THEME2-------------------------
                        https://symbio.agency/ */
      --body_backgroundColor2: rgb(255, 102, 0);
      --font_color2: rgb(255, 255, 255);
      --border_color2: rgb(0, 0, 0);
      --th_backgroundColor2: rgb(0, 0, 0);
      --th_Color2: rgb(255, 255, 255);

      --button_pers_Color2: rgb(0, 0, 0);
      --button_Color2: rgb(0, 0, 0);
        --styleBorder_Color2: rgb(255, 255, 255);
      --td_info_backgroundColor: var(--td_info_backgroundColor1);

      --TABLE_border_color2: var(--border_color2);
      --table_backgroundColor2: var(--body_backgroundColor);
      /*pers button style*/



      /* ------------THEME3-------------------------
                        https://www.topazlabs.com/topaz-photo-ai */
      --body_backgroundColor3: rgb(10, 10, 26);
      /*--font_color3: rgb(255, 255, 255);*/

      --font_color3: rgb(186, 217, 252);
      /* rgb(212, 212, 212); */

      --border_color3: rgb(136, 136, 136);

      --th_backgroundColor3: rgb(27, 50, 88);
      --th_Color3: rgb(255, 255, 255);
      --button_pers_Color3: rgb(136, 136, 136);
      --button_Color3: rgb(42, 246, 162);
      --td_info_backgroundColor3: var(--td_info_backgroundColor1);

      --TABLE_border_color3: var(--border_color3);
      --table_backgroundColor3: var(--body_backgroundColor);





      /* ------------THEME4-------------------------
                        https://codesandbox.io/  */
      /*--body_backgroundColor4: rgb(0, 0, 0);*/
      --body_backgroundColor4: rgb(29, 29, 29);
      /*--font_color4: rgb(255, 255, 255);*/
      --font_color4: rgb(212, 212, 212);
      --border_color4: rgb(136, 136, 136);
      /*--th_backgroundColor4: rgb(214, 251, 65);*/
      --th_backgroundColor4: rgb(227, 255, 115);
      --th_Color4: var(--body_backgroundColor4);

      --button_pers_Color4: rgb(136, 136, 136);
      --button_Color4: var(--button_Color1);
      --td_info_backgroundColor4: var(--td_info_backgroundColor1);

      --TABLE_border_color4: var(--border_color4);
      --table_backgroundColor4: var(--body_backgroundColor);




      /* ------------THEME41-------------------------
                        https://codesandbox.io/  */
      --body_backgroundColor41: rgb(0, 0, 0);
      /*--font_color4: rgb(255, 255, 255);*/
      --font_color41: rgb(212, 212, 212);
      --border_color41: rgb(136, 136, 136);
      /*--th_backgroundColor4: rgb(214, 251, 65);*/
      --th_backgroundColor41: rgb(227, 255, 115);
      --th_Color41: var(--body_backgroundColor41);

      --button_pers_Color41: rgb(136, 136, 136);
      /*--button_Color41: var(--button_Color1);  */
      --button_Color41: rgb(234, 255, 150);
      /* var(--th_backgroundColor41); */

      --td_info_backgroundColor41: var(--td_info_backgroundColor1);

      --TABLE_border_color41: transparent;
      --table_backgroundColor41: rgb(29, 29, 29);
      /* rgb(40, 40, 43) matte black */








      /* ------------THEME42-------------------------
                 databyte  */
      --body_backgroundColor42: rgb(0, 0, 0);
      /* rgb(28, 28, 30); */
      /*--font_color4: rgb(255, 255, 255);*/
      --font_color42: rgb(212, 212, 212);
      --border_color42: rgb(136, 136, 136);
      /*--th_backgroundColor4: rgb(214, 251, 65);*/
      --th_backgroundColor42: rgb(75, 75, 75);
      --th_Color42: white;

      --button_pers_Color42: rgb(136, 136, 136);
      /*--button_Color41: var(--button_Color1);  */
      --button_Color42: rgb(68, 142, 247);

              --styleBorder_Color42: rgb(68, 142, 247);

      --td_info_backgroundColor42: var(--td_info_backgroundColor1);

      --TABLE_border_color42: transparent;
      --table_backgroundColor42: rgb(44, 44, 46);






      /* ------------THEME43-------------------------
                 databyte  */
      --body_backgroundColor43: rgb(0, 0, 0);
      /* rgb(28, 28, 30); */
      /*--font_color4: rgb(255, 255, 255);*/
      --font_color43: rgb(212, 212, 212);
      --border_color43: rgb(136, 136, 136);
      /*--th_backgroundColor4: rgb(214, 251, 65);*/
      --th_backgroundColor43: rgb(75, 75, 75);
      --th_Color43: white;

      --button_pers_Color43: rgb(136, 136, 136);
      /*--button_Color41: var(--button_Color1);
      							--button_Color43: rgb(42, 246, 162);	*/
      --button_Color43: rgb(37, 211, 102);

      --td_info_backgroundColor43: var(--td_info_backgroundColor1);

      --TABLE_border_color43: transparent;
      --table_backgroundColor43: rgb(44, 44, 46);
      /*pers button style*/
      --BUTTONpers_border43 : var(--button_pers_Color43);
      --BUTTONpers_color43 : var(--button_pers_Color43);      
      --BUTTONpers_background43 : var(--body_backgroundColor43);




























      /* ------------THEME5-------------------------*/
      --body_backgroundColor5: rgb(0, 0, 0);
      --font_color5: rgb(212, 212, 212);
      --border_color5: rgb(136, 136, 136);
      --th_backgroundColor5: rgb(255, 102, 0);
      --th_Color5: rgb(255, 255, 255);

      --button_pers_Color5: rgb(136, 136, 136);
      --button_Color5:rgb(255, 102, 0);
      /* rgb(255, 102, 0); */
              --styleBorder_Color5:rgb(255, 102, 0);
      --td_info_backgroundColor: var(--td_info_backgroundColor1);

      --TABLE_border_color5: var(--border_color5);
      --table_backgroundColor5: var(--body_backgroundColor);






      /* ------------THEME6-------------------------
                        https://laracasts.com/discuss/channels/livewire/unchecking-checkbox-returns-false  */
      /*--body_backgroundColor4: rgb(0, 0, 0);*/
      --body_backgroundColor6: rgb(14, 23, 39);
      /*--font_color4: rgb(255, 255, 255);*/
      --font_color6: rgb(186, 217, 252);
      --border_color6: var(--font_color6);
      /* rgb(136, 136, 136);  rgb(27, 85, 172); rgb(186, 217, 252); */
      /*--th_backgroundColor4: rgb(214, 251, 65);*/
      --th_backgroundColor6: rgb(27, 85, 172);
      --th_Color6: rgb(255, 255, 255);

      --button_pers_Color6: var(--font_color6);
      /* rgb(136, 136, 136);  rgb(27, 85, 172); rgb(186, 217, 252); */
      --button_Color6: var(--button_Color1);
      /* rgb(110, 220, 196); */
      --td_info_backgroundColor6: var(--td_info_backgroundColor1);

      --TABLE_border_color6: var(--font_color6);
      --table_backgroundColor6: var(--body_backgroundColor);
      /* ------------THEME7-------------------------*/


    }

    /*THEME BUTTON */
    .theme {
      width: 30px;
      height: 30px;
      border-radius: 100px;
      border: 2px solid var(--button_Color);
      /* rgb(47, 59, 109);*/
      color: var(--font_color);
      text-align: center;
      vertical-align: middle;
      padding: 0px;
      /* solution to> circle displays as oval in iOS Safari*/
    }




    .theme1 {
      background-color: var(--body_backgroundColor1);
    }

    .theme2 {
      background-color: var(--body_backgroundColor2);
    }

    .theme3 {
      background-color: var(--body_backgroundColor3);

    }

    .theme4 {
      background-color: var(--body_backgroundColor4);
    }

    .theme41 {
      background-color: var(--body_backgroundColor41);
    }

    .theme42 {
      background-color: var(--body_backgroundColor42);
    }

    .theme43 {
      background-color: var(--body_backgroundColor43);
    }

    .theme5 {
      background-color: var(--body_backgroundColor5);
    }

    .theme6 {
      background-color: var(--body_backgroundColor6);
    }








    /* /////////////////////////////////////////////////////// */
    .body {
     /* max-width: var(--body_width); /*  kvoli master table nech je siroka s posuvnikom hned pod a fixed column freeze pane*/
      /*
                            font-family: SanomatSans, Arial, sans-serif;
                            font-weight: 200;
                            letter-spacing: 0.5px;
                            min-height: 100vh; */

                            



      height: 100%;
      /*filter: blur(4px); APPLY for screen lock*/

      margin: 0px 0px;
      padding: 0px 10px 0px 10px;
      background-color: var(--body_backgroundColor);

      /*background-color: var(--body_backgroundColor);*/
      /* rgb(47, 59, 109);*/
      color: var(--font_color);
      /* rgb(212,212,212);*/
      font-family: Matter, Arial, sans-serif;
      font-size: var(--font_size);
      text-align: left;
    }

    /* /////////////////////////////////////////////////////// */
    .button {
      height: var(--input_height);
      /* var(--input_height); */
      position: relative;
      display: inline-block;
      margin: 0px 0px;
      padding: 0px 5px;

      text-align: center;
       font-weight: bold;
      text-decoration: none;
      overflow: hidden;
      cursor: pointer;

      border: 2px solid var(--button_Color);
      /* rgb(42, 246, 162);*/
      border-radius: var(--border_radius);
      background-color: transparent;
      content: "";

       
      /*3D
       background-image: linear-gradient(to bottom, #f4feff,1px, transparent);

      linear-gradient(#ffffff63, var(--th_backgroundColor) 5px, var(--th_backgroundColor));

      background-color: transparent /  background-color:var(--body_backgroundColor);   NIE lebo potom to nerozozna??? zmenu farby pri stlaceni buttonu???;*/
      /* rgb(47, 59, 109); */
      color: var(--button_Color);
      /* rgb(42, 246, 162);*/
      font-size: var(--font-size);
    }

    .button:after {
      content: "";
      background: var(--th_backgroundColor);
      /* rgb(42, 246, 162);*/
      display: block;
      position: absolute;
      padding-top: 300%;
      padding-left: 350%;
      margin-left: -20px !important;
      margin-top: -120%;
      opacity: 0;
      transition: all 0.5s
    }

    .button:active:after {
      padding: 0;
      margin: 0;
      opacity: 1;
      transition: 0s
    }

    /* /////////////////////////////////////////////////////// */
    
    /* /////////////////////////////////////////////////////// */
    /* hidden button = no border no color */
    .hidden {
      /*        background-color: transparent; /* rgb(47, 59, 109); */
      width: var(--INPUTwide_width);
      height: var(--input_height);
      margin-right: px;
      padding: 0px;
      border: 0px solid var(--button_pers_Color);
      /* rgb(136, 136, 136);*/
      color: var(--font_Color);
      background-color: transparent;
      
      /*/set inactive button color/*/
    }




    /* /////////////////////////////////////////////////////// */
    .ds {
      /*        background-color: transparent; /* rgb(47, 59, 109);
                          style="width:45px;height:22px; margin:0px;padding:0px"  */
      width: 45px;
      height: var(--td_height);
      /* var(--input_height);    22px 20px a predtym 17px */
      margin: 0px;
      /* 1px 1px 1px 1px; */
      padding: 0px;
      /* 3px; */
      border: 1px solid var(--border_color);
      /* rgb(136, 136, 136);*/
      color: var(--border_color);
      /* rgb(136, 136, 136);*/
      /*/set inactive button color/*/
    }

    

    /* /////////////////////////////////////////////////////// */
    .table {
      
      /* border-collapse: collapse;
                                margin: 10px 0px 0px 0px;*/
      margin: var(--TABLEmargin);
      border: 1px solid var(--TABLE_border_color);
      /* rgb(136, 136, 136);*/
      border-radius: var(--border_radius);
      padding: 5px 5px 7px 5px;
      background-color: var(--TABLE_backgroundColor);
    }

    /* /////////////////////////////////////////////////////// */
    th:not(th:empty) {
      /*th:empty:not(th:empty ~ th:empty) {*/
      height: var(--th_height);
      /* 17px /*/
      text-transform: uppercase;
      padding: 0px 7px;
      /*border: 0px solid #FFD700;
                                border: px solid rgb(47, 59, 109);
                        background-color: rgb(42, 246, 162);*/
      border-radius: var(--border_radius);
      background-color: var(--th_backgroundColor);
      /* rgb(42, 246, 162);*/
      color: var(--th_Color);
      /* rgb(47, 59, 109);*/
      /* 3D headers for th */
      background-image: var(--background-image3D);
      /*background-image: linear-gradient(#ffffff63, var(--th_backgroundColor) 5px, var(--th_backgroundColor));*/
            
    }

    td,
    tr {
      /*padding: 1px 1px;
                                v riadku odstup vyska sirka*/
      /*border: 0px solid #FFD700;
                                border: px solid rgb(47, 59, 109);
                        height: px;*/
      height: var(--td_height);
      /* 17px /*/
      padding: 0px 1px;
      text-align: center;
    }








    /* /////////////////////////////////////////////////////// */
    .TABLEmap {
max-width: var(--body_width);

      border: none;
      margin: var(--TABLEmargin);
    }

    /* /////////////////////////////////////////////////////// */







    /* /////////////////////////////////////////////////////// */
    .TABLEinfo {

      border: none;
      margin: 0px;  /* var(--TABLEmargin); */



    }

    .TABLEinfo th:not(th:empty) {
      border-radius: var(--border_radius_THtop);
      height: var(--th_info_height);
      /* 17px /*/
    }

    .TABLEinfo td {
      /*border: px solid rgb(47, 59, 109);*/

      border-radius: 0px 0px 10px 10px;
      background-color: var(--td_info_backgroundColor);
      /* rgb(212,212,212);*/
      /*color: var(--body_backgroundColor);*/
      /* rgb(47, 59, 109);*/
      border: 1px solid var(--th_backgroundColor);
      height: var(--th_info_height);
      /* 17px /*/
    }










    /* /////////////////////////////////////////////////////// */
    .TABLEhtml {

      text-align: center;
      
      /*
                               border-collapse: collapse;
                               border-top:none;
                               border-left: px solid var(--border_color); /* rgb(136, 136, 136);
                               border-right: px solid var(--border_color); /* rgb(136, 136, 136);
                               border-bottom: px solid var(--border_color); /* rgb(136, 136, 136);
                                border: 1px solid rgb(234, 233, 233);
                                border-radius: 10px;
                               background-color: #25d366;
                                padding: 5px 5px;
                                margin: 10px 0px 0px 0px;
                                */
      margin: var(--TABLEmargin);
      /*max-width: 370px;*/
      width:var(--body_width);
      /*border: 1px solid var(--border_color);*/
      border: 1px solid var(--TABLE_border_color);
      /*  border: 1px solid var(--th_backgroundColor);*/

      /* rgb(42, 246, 162);
          background-color: var(--TABLE_backgroundColor);*/
      border-radius: var(--border_radius);
      border-spacing: 0;
      border-top: none;


      background-color: transparent;
    }

    .TABLEhtml tr td {
      background-color: var(--TABLE_backgroundColor);
    height: 11px;/*var(--td_height);*/
     }

    .TABLEhtml tr:first-child>:first-child {
      border-top-left-radius: var(--border_radius);
    }

    .TABLEhtml tr:first-child>:last-child {
      border-top-right-radius: var(--border_radius);
    }

    .TABLEhtml tr:last-child>:first-child {
      border-bottom-left-radius: var(--border_radius);
    }

    .TABLEhtml tr:last-child>:last-child {
      border-bottom-right-radius: var(--border_radius);
    }

    /* header - medzera medzi headers*/
    .TABLEhtml th:not(th:empty) {
      height: var(--th_info_height);
      /* 17px /*/
      border-radius: var(--border_radius_THtop);
      border-right: 1px solid var(--body_backgroundColor);
      /* rgb(47, 59, 109);*/
    }

    .TABLEhtml th:not(th:empty):last-of-type {
      border-right: 0px solid var(--body_backgroundColor);
      /* rgb(47, 59, 109);*/
    }

    .TABLEhtml td {
      white-space: nowrap;

      /*  border-bottom: 1px solid var(--border_color); /* rgb(136, 136, 136);
                                  border-left: 1px solid var(--border_color); /* rgb(136, 136, 136);
                                  border-right: 1px solid var(--border_color); /* rgb(136, 136, 136);
                                 border: 1px solid black;*/
      /*border-radius: 5px;*/
      /*background-color: #FFD700;  Green
                                text-align: right;*/

      /* border-bottom: 1px solid var(--border_color);*/
      border-bottom: 1px solid var(--TABLE_border_color);
      /* rgb(136, 136, 136);*/
    }


    .TABLEhtml td:first-of-type {
     /* border-left: 1px solid var(--TABLE_border_color);
       rgb(136, 136, 136);*/
    }

    .TABLEhtml td:last-of-type {
      border-right: 0px solid var(--border_color);
      /* rgb(136, 136, 136);*/
    }


    .TABLEhtml tr:last-child td {
      border-bottom: none;
    }



    

    









    /* /////////////////////////////////////////////////////// */
    .INPUT {
      width: 60px;

      height: var(--input_height);
      font-size: var(--input_font-size);
      text-align: center;
      padding: 0px 0px;
      border: none;
    }

    .INPUTwide {
      width: var(--INPUTwide_width);
      height: var(--input_height);
      /* 15 */
      font-size: var(--input_font-size);
      text-align: center;
      padding: 0px 0px;
      margin: 0px;
      border: 0px;
    }

    

    /* /////////////////////////////////////////////////////// https://webdevworkshop.io/code/css-toggle-button/ */
    .switch {
      position: relative;
      display: inline-block;
      width: 45px;
      height: var(--th_height);
      /* 19 */

    }

    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }

    .slider {
      /*circle*/
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: transparent;
      /*ccc*/
      -webkit-transition: .4s;
      transition: .4s;
      border: 1px solid var(--border_color);
    }

    .slider:before {
      position: absolute;
      content: "";
      height: 14px;
      width: 14px;
      left: 2px;
      bottom: 2px;
      background-color: var(--border_color);
      -webkit-transition: .4s;
      transition: .4s;
    }

    input:checked+.slider {
      background-color: transparent;
      border: 1px solid var(--button_Color);

    }

    /*
                        input:focus+.slider {
                          
                    box-shadow: 0 0 1px var(--border_color);
                  	box-shadow: 0 0 1px var(--button_Color); 

                        }*/

    input:checked+.slider:before {
      -webkit-transform: translateX(22px);
      -ms-transform: translateX(22px);
      transform: translateX(25px);
      background-color: var(--button_Color);

    }

    /* Rounded sliders */
    .slider.round {
      border-radius: 99px;
    }

    .slider.round:before {
      border-radius: 50%;
    }






    /* style for theme buttons */
    /* checkboxes for problem stenen 
     https://stackoverflow.com/questions/44299150/set-text-inside-a-check-box
https://codepen.io/jpI/pen/gWJRpb?editors=1111 */



.styletheme input{
  display: none;
}

.styletheme label {
  display: inline-block;
  text-align: center;
  border: 2px solid var(--styleBorder_Color);
  line-height: 50px;
  cursor: pointer;
  width: 20px; height: 20px; box-shadow: 0 0 0px var(--styleBorder_Color);
}

#theme1:checked ~ label[for="theme1"],
#theme3:checked ~ label[for="theme3"],
#theme2:checked ~ label[for="theme2"],
#theme5:checked ~ label[for="theme5"],
#theme6:checked ~ label[for="theme6"], 

#theme4:checked ~ label[for="theme4"] ,
#theme41:checked ~ label[for="theme41"] ,
#theme42:checked ~ label[for="theme42"] ,
#theme43:checked ~ label[for="theme43"] {
width: 25px; height: 25px; box-shadow: 0 0 10px var(--styleBorder_Color);
}


















    /* footer /////////////////////////////////////////////////////// */


    .container {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    align-items: center;
}

.header {
    background-color: #FFCCCC;
}

.content {
    background-color: #CCFFCC;
}
.footer {
      /* the best https://stackoverflow.com/questions/34796085/how-to-stick-footer-to-bottom-not-fixed-even-with-scrolling
#footer {
  background: #ffab62;
  width: 100%;
  height: 66px;
  position: absolute;
  bottom: 0;
  left: 0;
}
                            font-family: SanomatSans, Arial, sans-serif;
                            font-weight: 200;
                            letter-spacing: 0.5px;
                            min-height: 100vh;
                                background-color: var(--body_backgroundColor);


                                

    
      
            margin: var(--TABLEmargin);


            
      position: relative;      /*fixed;
      bottom: 0px;
      width: 100%;
*/
      


  /* 



      margin-top: auto;
      padding-bottom: 7px;
      /*same as var(--TABLEmargin);
      
      
               background: #ffab62;
               
               */
      
      
      

          margin-top: auto;


      color: var(--border_color);
      font-size: 11px;
      text-align: center;

    }
    














    









/*
//////////////////////////////////////////////////////////////////////////
// pause button
//////////////////////////////////////////////////////////////////////////
*/div {
  /* take the viewport Width & Height 
  width: 100vw;*/
 /*  height: 100vh;
  horizontal centers content */
  text-align: center;
  /* vertical centers content 
  display: table-cell;*/
  vertical-align: middle;
}

canvas {
  width: auto;
  /* 90% of smallest-side */
  height:33vmin;
}

span {
  position: absolute;
  /* 20% of smallest-side */
  font-size: 3vmin;
  /* 90% of smallest-side */
  line-height: 3vmin;
  /* 90% of smallest-side */
  width: 22vmin;
}
    


  </style>

  
  <div class="container">

    
    <div class="header"></div><!-- end  div class="header" -->
    <div class="content"></div><!-- end div class="content" -->



    

    
  
  <!-- needed for function on enter move to next input field -->
  <form id="formINPUTS" method="POST">


    


    
    






    <!-- /* Density Ds ////////////////////////////////////////////////// * -->
<table class="table" id="TABLEdensity">
      <!--     <tr class="TDgewicht">
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td colspan="4" style="width:239px;">
            Console gewicht
          </td>
        </tr> -->
      <tr>
        <!-- <th style="height:var(--th_height);">density</th> -->
        <th style="height: px; width: 25px" colspan="6">
                             <button class="button hidden" id="button_persdrukMIN" style="width:270px;
            height: var(--td_height);
     


                
      border-radius: var(--border_radius);
      color: var(--th_Color);

      
      
      
      " onclick="inputsCLEAR()" type="button"><b>Ds</b></button>
        </th>
         <!-- <td colspan="4" style="text-align: left;"><a id="Aftapgrenzen_Revisie1" style="color:var(--border_color);font-size:0.7rem;text-align: left;">Aftapgrenzen Revisie</a></td>
              </tr>  
      <tr> 
                <td></td> -->
                

      </tr>
      <tr>
        <td></td>
        <td style="height: px">Gewicht</td>
        <td class="waterbak" id="THwaterbak">Waterbak</td>
        <td class="volume">Volume</td>
        
        <td class="TDgewicht">-0,30</td>
        
        <!--    
					<td class="TDgewicht">-0,32</td>  
					-->
      </tr>
      <!-- /* 1. riadok Ds ////////////////////////////////////////////////// * -->
      <tr id="Ds1">
        <td style="height: px; width: 30px">
1.
        </td>
        <td>
          <!-- /*      <input class="INPUT" id="gewicht1" name="gewicht1" type="text" inputmode="decimal" min="1" max="99" step="1"
            value="" placeholder="kg" onkeypress="return tabE(this,event);" onclick="copy_gewicht(this);" oninput="estimate_waterbak();CALCdensity();" />      -->
          <input class="INPUT" id="gewicht1" name="gewicht1" type="number" inputmode="decimal" min="1" max="99" step="1"
            value="" placeholder="kg" onkeypress="return tabE(this,event);"   oninput="CALCdensity();" />
        </td>
        <td class="waterbak">
          <input class="INPUT" id="waterbak1" name="waterbak1" type="number" inputmode="decimal" min="1" max="99"
            step="1" value="" placeholder="kg" onkeypress="return tabE(this,event)"   oninput="CALCdensity();" /> <!-- /*copy_gewicht();copy_waterbak();* -->
        </td>
        <td class="volume">
          <input class="INPUT" id="volume1" name="volume1" type="number" inputmode="decimal" min="1" max="9999" step="1"
            value="" placeholder="cm&#179;" onkeypress="return tabE(this,event)" oninput="CALCdensity();copyVOLUME()" />
        </td>
        
        
        <td>
          <button class="button" id="density1_030" style="width: 60px; margin: 0px; padding: 0px"
            onclick="copyDs(this)" type="button">
            <!-- /* type="button" without it button is default as submit/reset and this buttons are in element FORM with attribute SEND which causing submiting form=error and clear all inserted data in input fields* -->?
          </button>
        </td>
       
        

        <!--
          <td>
            <button
              class="button ds"
              id="density1_032"
              onclick="copy(this)"
              type="button"
            >
						-->
        <!-- /* type="button" without it button is default as submit/reset and this buttons are in element FORM with attribute SEND which causing submiting form=error and clear all inserted data in input fields* -->
        <!--
							copy
            </button>
          </td>
					-->
      </tr>
      <!-- /* 2. riadok Ds ////////////////////////////////////////////////// * -->
      <tr id="Ds1">
        <td style="height: px; width: 30px">
2.
        </td>
        <td>
          <!-- /*      <input class="INPUT" id="gewicht1" name="gewicht1" type="text" inputmode="decimal" min="1" max="99" step="1"
            value="" placeholder="kg" onkeypress="return tabE(this,event);" onclick="copy_gewicht(this);" oninput="estimate_waterbak();CALCdensity();" />      -->
          <input class="INPUT" id="gewicht2" name="gewicht2" type="number" inputmode="decimal" min="1" max="99" step="1"
            value="" placeholder="kg" onkeypress="return tabE(this,event);"   oninput="CALCdensity();" />
        </td>
        <td class="waterbak">
          <input class="INPUT" id="waterbak2" name="waterbak2" type="number" inputmode="decimal" min="1" max="99"
            step="1" value="" placeholder="kg" onkeypress="return tabE(this,event)"   oninput="CALCdensity();" /> <!-- /*copy_gewicht();copy_waterbak();* -->
        </td>
        <td class="volume">
          <input class="INPUT" id="volume2" name="volume2" type="number" inputmode="decimal" min="1" max="9999" step="1"
            value="" placeholder="cm&#179;" onkeypress="return tabE(this,event)" oninput="CALCdensity();" />
        </td>
        
        
        <td>
          <button class="button" id="density2_030" style="width: 60px; margin: 0px; padding: 0px"
            onclick="copyDs(this)" type="button">
            <!-- /* type="button" without it button is default as submit/reset and this buttons are in element FORM with attribute SEND which causing submiting form=error and clear all inserted data in input fields* -->?
          </button>
        </td>
       
        

        <!--
          <td>
            <button
              class="button ds"
              id="density1_032"
              onclick="copy(this)"
              type="button"
            >
						-->
        <!-- /* type="button" without it button is default as submit/reset and this buttons are in element FORM with attribute SEND which causing submiting form=error and clear all inserted data in input fields* -->
        <!--
							copy
            </button>
          </td>
					-->
      </tr>


      
    </table>
  </form>
  <!-- needed for function on enter move to next input field -->



  <div class="chart" id="graph" data-percent="18">
  
  </div>

<div id="loader">
	<canvas id="circularLoader" width="300" height="300"></canvas>
</div>











  <div class="footer">
<div class="styletheme">
<!-- /* iny sposob
<label class="styletheme>  <input type="radio" name="theme" id="theme1" onclick="theme1()"/></label>
<label class="styletheme>  <input type="radio" name="theme" id="theme3" onclick="theme3()"/></label>
<label class="styletheme>  <input type="radio" name="theme" id="theme2" onclick="theme2()"/></label>
<label class="styletheme>  <input type="radio" name="theme" id="theme5" onclick="theme5()"/></label>
<label class="styletheme>  <input type="radio" name="theme" id="theme6" onclick="theme6()"/></label>
<label class="styletheme>  <input type="radio" name="theme" id="theme4" onclick="theme4()"/></label>
<label class="styletheme>  <input type="radio" name="theme" id="theme41" onclick="theme41()"/></label>
<label class="styletheme>  <input type="radio" name="theme" id="theme42" onclick="theme42()"/></label>
<label class="styletheme>  <input type="radio" name="theme" id="theme43" onclick="theme43()" checked/></label>
* -->
				<input type="radio" name="theme" id="theme1" onclick="theme1();themeALL(this);" />
				<input type="radio" name="theme" id="theme3" onclick="theme3();themeALL(this);"/>
				<input type="radio" name="theme" id="theme2" onclick="theme2();themeALL(this);" />
				<input type="radio" name="theme" id="theme5" onclick="theme5();themeALL(this);"/>
				<input type="radio" name="theme" id="theme6" onclick="theme6();themeALL(this);"/>
        <input type="radio" name="theme" id="theme4" onclick="theme4();themeALL(this);"/>
        <input type="radio" name="theme" id="theme41" onclick="theme41();themeALL(this);"/>
        <input type="radio" name="theme" id="theme42" onclick="theme42();themeALL(this);"/>
        <input type="radio" name="theme" id="theme43" onclick="theme43();themeALL(this);" />

        
        
				<label for="theme5" class="theme theme5"></label>
        
        
				<label for="theme2" class="theme theme2"></label>
        <label for="theme42" class="theme theme42"></label>
        


        
</div>
<br/>
<a style="text-decoration: none; color:var(--styleBorder_Color)">DsCALC</a>   
<br/>

    v1.0 beta<br />
    Developed by Tomas Grega<br />
    Copyright Ⓒ 2025 Tomas Grega All Rights Reserved
  </div> 
   
</div>







  <script id="erasable" type="text/javascript">
    //HIDE YOUR SCRIPT IN BROWSER
    //https://stackoverflow.com/questions/4766834/how-do-i-protect-javascript-files
    //your code goes here

    //end of erasable function
    document.getElementById("erasable").textContent = ""
      ; ("use strict")
      

      
      

      

    //////////////////////////////////////////////////////////////////////////
    //   DEFAULT display
    //////////////////////////////////////////////////////////////////////////
    

    //////////////////////////////////////////////////////////////////////////
    // buttons for pers - change color on click
    //////////////////////////////////////////////////////////////////////////
    //how to Access CSS variable from javascript
    //how to use css variable in javascript
    //https://www.w3schools.com/css/css3_variables_javascript.asp
    // Get the root element
    var root = document.querySelector(":root")
    var rootStyle = getComputedStyle(root)
    

    










//////////////////////////////////////////////////////////////////////////
// pause button
//////////////////////////////////////////////////////////////////////////
var el = document.getElementById('graph'); // get canvas

var options = {
    percent:  el.getAttribute('data-percent') || 25,
    // use screen.width (screen.width - 5)
    size: el.getAttribute('data-size') || (screen.width - 5),
    // increase line width
    lineWidth: el.getAttribute('data-line') || 100,
    rotate: el.getAttribute('data-rotate') || 0
}

var canvas = document.createElement('canvas');
var span = document.createElement('span');
span.textContent = 'GRANT '+ options.percent + ' minute pause for TOMAS';
    
if (typeof(G_vmlCanvasManager) !== 'undefined') {
    G_vmlCanvasManager.initElement(canvas);
}

var ctx = canvas.getContext('2d');
canvas.width = canvas.height = options.size;

el.appendChild(span);
el.appendChild(canvas);

ctx.translate(options.size / 2, options.size / 2); // change center
ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg

//imd = ctx.getImageData(0, 0, 240, 240);
var radius = (options.size - options.lineWidth) / 2;

var drawCircle = function(color, lineWidth, percent) {
		percent = Math.min(Math.max(0, percent || 1), 1);
		ctx.beginPath();
		ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);
		ctx.strokeStyle = color;
        ctx.lineCap = 'round'; // butt, round or square
		ctx.lineWidth = lineWidth
		ctx.stroke();
};

drawCircle('#efefef', options.lineWidth, 100 / 100);
drawCircle('#555555', options.lineWidth, options.percent / 100);












var ctx = document.getElementById('circularLoader').getContext('2d');
var al = 0;
var start = 4.72;
var cw = ctx.canvas.width;
var ch = ctx.canvas.height; 
var diff;
function progressSim(){
	diff = ((al / 100) * Math.PI*2*10).toFixed(2);
	ctx.clearRect(0, 0, cw, ch);
	ctx.lineWidth = 17;
	ctx.fillStyle = '#4285f4';
	ctx.strokeStyle = "#4285f4";
	ctx.textAlign = "center";
	ctx.font="28px monospace";
	ctx.fillText(al+'%', cw*.52, ch*.5+5, cw+12);
	ctx.beginPath();
	ctx.arc(100, 100, 75, start, diff/10+start, false);
	ctx.stroke();
	if(al >= 100){
		clearTimeout(sim);
	    // Add scripting here that will run when progress completes
	}
	al++;
}
var sim = setInterval(progressSim, 50);





















//////////////////////////////////////////////////////////////////////////
// CLEAR
//////////////////////////////////////////////////////////////////////////
function inputsCLEAR() {
//clear inputs field without reseting site, so info about checked pers is actual
document.getElementById("formINPUTS").reset()
document.getElementById("density1_030").innerText = "?"    
document.getElementById("density2_030").innerText = "?"  

      
}

    //////////////////////////////////////////////////////////////////////////
    // for input - move to next input by press ENTER
    //////////////////////////////////////////////////////////////////////////
    function tabE(obj, e) {
      var e = typeof event != "undefined" ? window.event : e // IE : Moz
      if (e.keyCode == 13) {
        //13=ENTER key
        var ele = document.forms[0].elements
        for (var i = 0; i < ele.length; i++) {
          var q = i == ele.length - 1 ? 0 : i + 1 // if last element : if any other
          if (obj == ele[i]) {
    //        console.log("q is  " + q)
            /*
                                console.log("ele.length   " + ele.length);
                                console.log("obj   " + obj.id);
                                console.log("ele   " + ele.id);
                                console.log("q   " + q);
                                console.log("ele[i]   " + ele[i].id);
                  */
            if (q == 1) {
              //skip buttons button_steendrukMIN+button_steendrukMAX
              q = 2 //go to Lengte1
              console.log("q next  " + q)
            } else if (q == 5) {
              //skip Lengte2
              q = 6 //go to Breedte1
              console.log("q next  " + q)
            } else if (q == 7) {
              q = 16
              console.log("q next  " + q)
            } else if (q == 17) {
              q = 17
              console.log("q next  " + q)
            } else if (q == 18) {
              q = 23
              console.log("q next  " + q)
            } else if (q == 24) {
              q = 29
              console.log("q next  " + q)
            } else if (q == 25) {
              q = 25
              console.log("q next  " + q)
            } else if (q > 30) {
              q = 3 // focus on button copy steendrukMAX, press ENTER=copied value
              console.log("ELSE q next " + q)
            }

            ele[q].focus()
            break
          }
        }
        return false
      }
    }
    
    
    //////////////////////////////////////////////////////////////////////////
    // DENSITY calculator
    //////////////////////////////////////////////////////////////////////////

    

    function CALCdensity() {
      //to keep cell value auto recalculating - run function when is changed:
      // area=with script/manual by user = add function to function CALCarea
      // persdrukMIN, persdrukMAX = run function onChange input fields
      // kamers = if changed value via button +/- or in input field it execute function saveValue/save new value for steenenPEReprs/, so add function CALCsteendruk to function saveValue
      // clear button - whne clicked clear also values in buttons button_steendrukMIN a button_steendrukMAX

      var gewicht1 = document.getElementById("gewicht1").value
      //var persdrukMIN = parseInt(persdrukMIN, 10);
      var waterbak1 = document.getElementById("waterbak1").value
      var volume1 = document.getElementById("volume1").value

      var gewicht2 = document.getElementById("gewicht2").value
      //var persdrukMIN = parseInt(persdrukMIN, 10);
      var waterbak2 = document.getElementById("waterbak2").value
      var volume2 = document.getElementById("volume2").value
/*
      var gewicht3 = document.getElementById("gewicht3").value
      //var persdrukMIN = parseInt(persdrukMIN, 10);
      var waterbak3 = document.getElementById("waterbak3").value
      var volume3 = document.getElementById("volume3").value

      var gewicht4 = document.getElementById("gewicht4").value
      //var persdrukMIN = parseInt(persdrukMIN, 10);
      var waterbak4 = document.getElementById("waterbak4").value
      var volume4 = document.getElementById("volume4").value

    
            console.log("gewicht1   " + gewicht1);
            console.log("waterbak1   " + waterbak1);
            console.log("density1_029   " + density1_029);
            console.log("waterbak2   " + waterbak2);
               */

      if (waterbak1 !== "") {
        //default=hide density TD headers AND NOW UNHIDE
        //access css via all classes / select all classes
        //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
        const classesTDgewicht = document.querySelectorAll(".TDgewicht")
        classesTDgewicht.forEach((element) => {
          element.style.display = "table-cell"
        })
        // Access the first element in the NodeList
        classesTDgewicht[0]
        ///////////////////
        //calculation
        /////TABLET value must be with , coma decimal separator to save value. Use toLocalString to replace . with ,
        //var density1_029 = (gewicht1 / (gewicht1 - waterbak1 - 0.29)).toFixed(2); //NOT OK ROUND UP 1.015=1.01
        //var density1_030 = (gewicht1 /(gewicht1 - waterbak1 - 0.3)).toLocaleString("pt-BR", {maximumFractionDigits: 3,})

         /*
       var density1_030 = (gewicht1 /(gewicht1 - waterbak1 - 0.3))
       var density1_030 = Math.round((density1_030 + Number.EPSILON) * 1000) / 1000
       var density1_030=density1_030.toLocaleString("pt-BR", {maximumFractionDigits: 3,})
       */
            
       
      var density1_030 = Math.round(((gewicht1 /(gewicht1 - waterbak1 - 0.3)) + Number.EPSILON) * 1000) / 1000
      
        
        
        //unhide results
        
        document.getElementById("density1_030").style.display = ""//ak table tak button nebol v tabulke zarovnany na stred ale do lava
        
        //document.getElementById("density1_032").style.display = "table"

        //output results
        
        document.getElementById("density1_030").textContent = density1_030
        
        //document.getElementById("density1_032").textContent = density1_032

     //console.log((3.333).toLocaleString("sk-SK")+'aaa density1_030  '+density1_030+'  ds_min '+ds_min+ '   sum je: '+(density1_030+ds_min))


     
 




      }

      if (volume1 !== "") {
        //calculation
        //var density1_030 = (gewicht1 / (volume1 / 1000)).toFixed(2);
        //var density1_030 = (gewicht1 / (volume1 / 1000)).toLocaleString("pt-BR",{maximumFractionDigits: 3,},)
var density1_030 = Math.round(((gewicht1 / (volume1 / 1000)) + Number.EPSILON) * 1000) / 1000

        //unhide results
        //document.getElementById("density1_029").style.display = "table";
        document.getElementById("density1_030").style.display = "" //ak table tak button nebol v tabulke zarovnany na stred ale do lava
        //document.getElementById("density1_031").style.display = "table";
        //document.getElementById("density1_032").style.display = "table";

        //output results
        //document.getElementById("density1_029").textContent = density1_029;
        document.getElementById("density1_030").textContent = density1_030
        //document.getElementById("density1_031").textContent = density1_031;
        //document.getElementById("density1_032").textContent = density1_032;

        
 

}

      if (waterbak2 !== "") {
        //calculating density2
        
      var density2_030 = Math.round(((gewicht2 /(gewicht2 - waterbak2 - 0.3)) + Number.EPSILON) * 1000) / 1000
      
   
      

       
      
        document.getElementById("density2_030").textContent = density2_030
        
        //document.getElementById("density2_032").textContent = density2_032
        //unhide results
        
        document.getElementById("density2_030").style.display = "" //ak table tak button nebol v tabulke zarovnany na stred ale do lava
        
        //document.getElementById("density2_032").style.display = "table"


            
      }

      if (volume2 !== "") {
        //calculation

        
        
       var density2_030 = Math.round(((gewicht2 / (volume2 / 1000)) + Number.EPSILON) * 1000) / 1000

      
       
        //output results

        //document.getElementById("density2_029").style.display = "none";
        document.getElementById("density2_030").style.display = "" //ak table tak button nebol v tabulke zarovnany na stred ale do lava
        ///document.getElementById("density2_031").style.display = "none";
        //document.getElementById("density2_032").style.display = "none";
        //output results
        //document.getElementById("density2_029").textContent = density2_029;
        document.getElementById("density2_030").textContent = density2_030
        // document.getElementById("density2_031").textContent = density2_031;
        // document.getElementById("density2_032").textContent = density2_032;



              
      }


      

      /*
                    console.log("stapeltest3   " + stapeltest3);
            console.log("stapeltest4   " + stapeltest4);
                    console.log("stapeltest8   " + stapeltest8);
            */
    } /* end function */



    





    

    
 
 

    //////////////////////////////////////////////////////////////////////////
    // COPY volume
    //////////////////////////////////////////////////////////////////////////
    function copyVOLUME() {
      document.getElementById("volume2").value =
        document.getElementById("volume1").value
        
      //unhide 3rd row in Ds - if i calculate volume
    }


        //////////////////////////////////////////////////////////////////////////
    // COPY Ds 
    //////////////////////////////////////////////////////////////////////////
    function copyDs(clicked) {
      //https://stackoverflow.com/questions/33855641/copy-output-of-a-javascript-variable-to-the-clipboard
      //I clicked button.id
      //var btn_name = clicked.id;
      //console.log("name   "+name);
      var dummy = document.createElement("textarea")
      document.body.appendChild(dummy)
      //dummy.value = text;
      //dummy.value = document.getElementById("factor").textContent;
      dummy.value = document.getElementById(clicked.id).textContent
     


     dummy.value = Math.round((parseFloat(dummy.value)+ Number.EPSILON) * 100) / 100
       dummy.value=(parseFloat(dummy.value)).toLocaleString("sk-SK")
      // console.log("dummy   " + dummy);
   console.log("6305 dummy.value   " + dummy.value);
      

   
      dummy.select()
      document.execCommand("copy")
      document.body.removeChild(dummy)
    }





    //////////////////////////////////////////////////////////////////////////
    // COPY button 
    //////////////////////////////////////////////////////////////////////////
    function copy(clicked) {
      //https://stackoverflow.com/questions/33855641/copy-output-of-a-javascript-variable-to-the-clipboard
      //I clicked button.id
      //var btn_name = clicked.id;
      //console.log("name   "+name);
      var dummy = document.createElement("textarea")
      document.body.appendChild(dummy)
      //dummy.value = text;
      //dummy.value = document.getElementById("factor").textContent;
      dummy.value = document.getElementById(clicked.id).textContent
      // console.log("dummy   " + dummy);
      // console.log("dummy.value   " + dummy.value);
      dummy.select()
      document.execCommand("copy")
      document.body.removeChild(dummy)
    }
    

    
    
    //////////////////////////////////////////////////////////////////////////
    // COPY button copyKG
    //////////////////////////////////////////////////////////////////////////
    function copyKG(clicked) {
      var dummy2 = document.createElement("textarea")
      document.body.appendChild(dummy2)
      //dummy.value = text;
      //dummy.value = document.getElementById("factor").textContent;
      dummy2.value = document.getElementById(clicked.id).id.slice(-1) //pre prvy riadok je button_gewicht1 a z tohto id potrebujem posledny character - ktore cislo 1, aby som to sparoval s inputbox id, t.j. gewicht+cislo
      console.log("dummy2   " + dummy2)
      console.log("5246 dummy2.value   " + dummy2.value)

      // Get the text field
      //var copyText = dummy2       //copy text inside without selecting text
      var copyText = document.getElementById("gewicht" + dummy2.value) //copy text inside with selecting text-easy to rewrite/delete text

      // Select the text field
      copyText.select()
      //copyText.setSelectionRange(0, 99999); // For mobile devices

      // Copy the text inside the text field
      //navigator.clipboard.writeText(copyText.value);
      document.execCommand("copy")
      document.body.removeChild(dummy2)
      // Alert the copied text
      //alert("Copied the text: " + copyText.value);
    }
    
    
    
// Here you can add more inputs to set value. if it"s saved /
    //Save the value function - save it to localStorage as (ID, VALUE)
function saveValue(e) {
      var id = e.id // get the sender"s id to save it .
      var val = e.value // get the value.
//      console.log("saveValue hodnota pre id je   " + id)
 //     console.log("saveValue hodnota pre val je   " + val)
      //checkbox returns value 'on', but I need recognize if it is true/false
      if (val == "on") {
        var isChecked = document.getElementById(id).checked //change actual clicked
        var val = isChecked //replace 'on' with value true/false

 //       console.log(id + "   4695 checkbox for stapeltest   " + val)
        //console.log('2 saved val stapel is   '+getSavedValue("stapeltest400"))
      }


      
      
      localStorage.setItem(id, val) // Every time user writing something, the localStorage"s value will override .
      // document.getElementById("kamers").textContent = getSavedValue("stenen" + document.getElementById("persNUMBER").textContent,     )
      //document.getElementById("kamers").textContent = val

      //aktualizuj hodnotu val do master table
      //document.getElementById(id).textContent = val //.value pre inputbox .textContent pre a atribute?

      //aktualizuj hodnotu val do id stapeltest on/off
      //document.getElementById(id).checked = val
      //tableSTAPELTEST()





}

/*
    /* Here you can add more inputs to set value. if it"s saved /
    //Save the value function - save it to localStorage as (ID, VALUE)
    function saveValue(e) {
      var id = e.id // get the sender"s id to save it .
      var val = e.value // get the value.
      console.log("4604 hodnota pre id je   " + id)
      console.log("4605 hodnota pre val je   " + val)
      //checkbox returns value 'on', but I need recognize if it is true/false
      if (val == "on") {
        var isChecked = document.getElementById(id).checked //change actual clicked
        var val = isChecked //replace 'on' with value true/false

        console.log(id + "   4695 checkbox for stapeltest   " + val)
        //console.log('2 saved val stapel is   '+getSavedValue("stapeltest400"))
      }

      //////////////////////////////////////////////////////////////////////////
      // kamers -
      //////////////////////////////////////////////////////////////////////////
      if (id == "kamers") {
        var id = "stenen" + document.getElementById("persNUMBER").textContent // get the sender"s id to save it .
        console.log("var e z kamers    " + e)
        console.log("var e.id z kamers    " + e.id)
        console.log("var id z kamers    " + id)
        console.log("value z kamers    " + val)
      }

      if (id == "kamersMINUS") {
        var id = "stenen" + document.getElementById("persNUMBER").textContent // get the sender"s id to save it .

        console.log(
          "hodnota inputbox je    " +
          document.getElementById("kamers").value,
        )
        var val = document.getElementById("kamers").value

        console.log("var e z kamersMINUS    " + e)
        console.log("var e.id z kamersMINUS    " + e.id)
        console.log("var id z kamersMINUS    " + id)
        console.log("value z kamersMINUS    " + val)
      }

      if (id == "kamersPLUS") {
        var id = "stenen" + document.getElementById("persNUMBER").textContent // get the sender"s id to save it .

        console.log(
          "hodnota inputbox je    " +
          document.getElementById("kamers").value,
        )
        var val = document.getElementById("kamers").value

        console.log("var e z kamersMINUS    " + e)
        console.log("var e.id z kamersMINUS    " + e.id)
        console.log("var id z kamersMINUS    " + id)
        console.log("value z kamersMINUS    " + val)
      }

      //////////////////////////////////////////////////////////////////////////
      // STAPELTEST -
      //////////////////////////////////////////////////////////////////////////
      if (id == "stapeltest") {
        var id = "stapeltest" + document.getElementById("persNUMBER").textContent // get the sender"s id to save it .
        console.log("var e z stapeltest    " + e)
        console.log("var e.id z stapeltest    " + e.id)

        console.log("var id z stapeltest    " + id)
        console.log("value z stapeltest    " + val)
      } else {
        //change text in inputbox stapeltest1meeting + stapeltest2meeting according changed values for stenen per pers
        //	 console.log("4933 run  placeholderSTAPELTEST  ")
        //	 	placeholderSTAPELTEST();
        //		console.log("49355 END run  placeholderSTAPELTEST  ")
      }

      //console.log('stenen' + document.getElementById('persNUMBER').textContent + "   aaa   " + val)

      console.log(e.id + "   e.id pre kamers   " + e.id)
      console.log(val + "   val pre kamers   " + val)
      // console.log("persNUMBER je aktualne  " +            document.getElementById("persNUMBER").textContent,)
      // console.log("kamers uklada ako  " +getSavedValue("stenen" + document.getElementById("persNUMBER").textContent,     ),)

      localStorage.setItem(id, val) // Every time user writing something, the localStorage"s value will override .
      // document.getElementById("kamers").textContent = getSavedValue("stenen" + document.getElementById("persNUMBER").textContent,     )
      //document.getElementById("kamers").textContent = val

      //aktualizuj hodnotu val do id stenen per pers
      document.getElementById(id).textContent = val //.value pre inputbox .textContent pre a atribute?

      //aktualizuj hodnotu val do id stapeltest on/off
      document.getElementById(id).checked = val
      tableSTAPELTEST()

      //console.log("localStorage.getItem(stenen400)   " +  localStorage.getItem("stenen400"),        )
      //console.log("getElementById(stenen400).value " + document.getElementById("stenen400").textContent)

      CALCsteendruk() //if change value of steen per pers=recalculate
    }

*/
    //get the saved value function - return the value of "v" from localStorage.
    function getSavedValue(v) {
      if (!localStorage.getItem(v)) {
        return "" // You can change this to your defualt value.
      }
      return localStorage.getItem(v)
      console.log("localStorage.getItem(stapeltest400)   " +  localStorage.getItem("stenen400"), )
    }
    ///////////////////////////////////////////////////////////////////////////






    
    
    //////////////////////////////////////////////////////////////////////////
    // THEME STYLE
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////
    //   start with style theme saved to memory - last used theme
    //////////////////////////////////////////////////////////////
    //for theme43 run function theme43();

/*
na pociatku nemam ziadnu temu vybratu = set default
po zadani sa ulozi do localStorage

refresh page=nacitaj theme z localStorage actual theme

*/
if (localStorage.getItem("used_theme") !==null){
//console.log("localStorage.getItem(used_theme)   " +        localStorage.getItem("used_theme"),      )
//https://www.geeksforgeeks.org/how-to-execute-a-function-when-its-name-as-a-string-in-javascript/
eval(localStorage.getItem("used_theme") + "()"); 
//make radio button checked-bigger than others
//console.log("localStorage.getItem(used_themeeeee)   " +document.getElementById(localStorage.getItem("used_theme")).checked  )
themeALL(); //po zmente theme musi ist function themeALL
  document.getElementById(localStorage.getItem("used_theme")).checked=true;
}else{
 // console.log('theme nie je v local.storage')
  
  var theme_default = 'theme2';
  localStorage.setItem("used_theme", theme_default)
eval(localStorage.getItem("used_theme") + "()"); 
  document.getElementById(localStorage.getItem("used_theme")).checked=true;
  
themeALL(); //po zmente theme musi ist function themeALL
}





    //this variable was set at function PERSchangeColor
    //var root = document.querySelector(':root');
    //var rootStyle = getComputedStyle(root);
    //function PERSchangeColor(clicked) {
    //get style of inactive pers button color/border
    //GET STYLES FROM CSS
    // Get the styles (properties and values) for the root

    //var button_Color=rootStyle.getPropertyValue('--button_Color');

    //hide actual theme1 button
    //document.getElementById("theme1").style.display = "none";
    //document.getElementById("theme1").style =      "width: 25px; height: 25px; box-shadow: 0 0 10px var(--button_Color);"










/////////////////////////////////////////////////////////////
//  for all themes
/////////////////////////////////////////////////////////////
function themeALL(e) {
/*
save last used theme to memory
after refresh/load page get theme from memory
*/
//console.log('e   '+e)
//Save the value function - save it to localStorage as (ID, VALUE)
if(e !==undefined){ //t.j. na zaciatku som theme kliknutim nezvolil, nastav default theme=theme43
//  console.log('e1   '+e)
      var id_theme = e.id // get the sender"s id to save it = theme41
}else{
  //nacitaj default theme z localStorage, ktora sa ulozila pri pociatocnom spusteni
//  console.log('e2   '+e)
  eval(localStorage.getItem("used_theme") + "()"); 
    var id_theme=localStorage.getItem("used_theme")



}

 //     var val = e.value // get the value = on/off ?
 //     console.log("4604 saveValue_theme hodnota pre id je   " + id_theme)
//      console.log("4605 saveValue_theme hodnota pre val je   " + val)
      //checkbox+radio returns value 'on', but I need recognize if it is true/false
  
      //localStorage.setItem(id, val) // Every time user writing something, the localStorage"s value will override
localStorage.setItem("used_theme", id_theme) // Every time user writing something, the localStorage"s value will override
//console.log("localStorage.getItem(used_theme)   " +        localStorage.getItem("used_theme"),      )
/*
console.log("1602 saved val stapel is   " + getSavedValue("stapeltest1602"),)
      */
    ///////////////////////////////////////////////////////////////////////////


    

      //////////////////////////////////////////////////////////////
      //  replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      var actual_font_color = rootStyle.getPropertyValue("--font_color")
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue("--body_backgroundColor")
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
//localStorage.setItem(id, val) // Every time user writing something, the localStorage"s value will override
//localStorage.setItem(clickedID, clicked_BUTTONpers_checked) // Every time user writing something, the localStorage"s value will override
//console.log("localStorage.getItem(clickedID)  pre button  " +clickedID+' je value  '+localStorage.getItem(clickedID))
/*
      console.log("themeALL actual_ CSS --font_color: " + actual_font_color)
      console.log("themeALL actual_ CSS --button_Color: " + actual_button_Color)
      console.log("themeALL actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor)
      console.log("themeALL actual_ CSS --border_color: " + actual_border_color)
*/
      

      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
       // var checked_id= 'checked_'+element.id // get the ID 
      //  console.log('111111111111 actual .pers button ID is   :' + element.id)
       // console.log('111111111111 actual .pers button ID is   :' + localStorage.getItem(checked_id))
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (localStorage.getItem(element.id) == 'checkedNO') {
  //        console.log('.pers button ID:  '+element.id+' is inactive=do nothing')
          element.style.color = actual_border_color
          element.style.backgroundColor = actual_body_backgroundColor //vyriesi problem-checkeNO/1/2/NO = povodne bg prepise a ak zmenim theme=bg ostava a ja ho potrebujem zmenit na bg aktualnej temy
          element.style.borderColor = actual_border_color
        } else if (localStorage.getItem(element.id) == 'checked1') {
 //         console.log('.pers button ID:  '+element.id+'   is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.backgroundColor = actual_body_backgroundColor
          element.style.borderColor = actual_button_Color
        } else if (localStorage.getItem(element.id) == 'checked2') {
   //       console.log('.pers button ID:  '+element.id+'   is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
/*      
//////////////////////////////////////////////////////////////
// old - pers button change color when theme is changed
//////////////////////////////////////////////////////////////////////////      
      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        console.log('111111111111 actual .pers button ID is   :' + element.id)
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
//////////////////////////////////////////////////////////////
*/


if (id_theme=='theme1'){
//plus+minus buttons pre theme1 su ine farebne
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "rgb(244, 67, 54)"
        element.style.borderColor = "rgb(244, 67, 54)"
        element.style.color = rootStyle.getPropertyValue("--font_color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "rgb(37, 211, 102)"
        element.style.borderColor = "rgb(37, 211, 102)"
        element.style.color = rootStyle.getPropertyValue(
          "--body_backgroundColor",
        )
      })
      // Access the first element in the NodeList
      classesBplus[0]

}else {

 
        //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBplus[0]
}     

//select all rows in source table
//////////////////////////////////////////////////////////////////////////
      //table souce - vynuluj vsetky na default font color
const classesTDtableSOURCErow = document.querySelectorAll(".tableSOURCErow")

classesTDtableSOURCErow.forEach((element) => {
//set font color as theme font color
 element.style.color = actual_font_color
//if any pers is not select NO grey out else grey out and pers highlight

if (document.getElementById("persNUMBER").textContent !=='select') {
//table souce - vynuluj vsetky na default font color
const classesTDtableSOURCErow = document.querySelectorAll(".tableSOURCErow")
      classesTDtableSOURCErow.forEach((element) => {
       // element.style.color = rootStyle.getPropertyValue("--font_color")
        element.style.color = rootStyle.getPropertyValue("--border_color")
      })
//table source - clicked pers zvyrazni
document.getElementById("tableSOURCErow"+persNUMBER).style.color = rootStyle.getPropertyValue("--font_color")
//document.getElementById("tableSOURCErow"+persNUMBER).style.color = rootStyle.getPropertyValue("--button_Color")
//document.getElementById("tableSOURCErow"+persNUMBER).style.color = rootStyle.getPropertyValue("--border_color")
}





/*

        if (getComputedStyle(element).color == actual_font_color) {
          //console.log('.tableSOURCErow is inactive=do nothing')
        } else if (
          getComputedStyle(element).color == actual_button_Color) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          //element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
*/

   //     element.style.color = rootStyle.getPropertyValue("--font_color")
     //   element.style.color = rootStyle.getPropertyValue("--border_color")
      })
      // Access the first element in the NodeList
      classesTDtableSOURCErow[0]
//////////////////////////////////////////////////////////////////////////
} //end themeALL()
      





























    function theme1() {
      //default theme
      //how to Access CSS variable from javascript
      //how to use css variable in javascript
      //https://www.w3schools.com/css/css3_variables_javascript.asp
      //NOT hex, only rgb can function read
      //document.querySelector(':root').style.setProperty('--blue', 'lightblue');
      ////document.documentElement.style.setProperty("--font_color", "rgb(0, 0, 0)");
      //document.documentElement.style.setProperty("--body_backgroundColor", getComputedStyle(document.querySelector(':root')).getPropertyValue("--body_backgroundColor2"));
      root.style.setProperty(
        "--body_backgroundColor",
        rootStyle.getPropertyValue("--body_backgroundColor1"),
      )
      root.style.setProperty(
        "--font_color",
        rootStyle.getPropertyValue("--font_color1"),
      )
      root.style.setProperty(
        "--border_color",
        rootStyle.getPropertyValue("--border_color1"),
      )
      root.style.setProperty(
        "--th_backgroundColor",
        rootStyle.getPropertyValue("--th_backgroundColor1"),
      )
      root.style.setProperty(
        "--th_Color",
        rootStyle.getPropertyValue("--th_Color1"),
      )
      root.style.setProperty(
        "--button_Color",
        rootStyle.getPropertyValue("--button_Color1"),
      )

      root.style.setProperty(
        "--button_pers_Color",
        rootStyle.getPropertyValue("--button_pers_Color1"),
      )
      root.style.setProperty(
        "--TABLE_border_color",
        rootStyle.getPropertyValue("--TABLE_border_color1"),
      )
      root.style.setProperty(
        "--TABLE_backgroundColor",
        rootStyle.getPropertyValue("--table_backgroundColor1"),
      )

      /* nahradene buttons na radio a tam to mam nastavene v style
      //hide clicked button
      //document.getElementById("theme1").style.display = "none";
      document.getElementById("theme1").style =
        "width: 25px; height: 25px; box-shadow: 0 0 10px var(--button_Color);"

      //hide clicked button
      //document.getElementById("theme2").style.display = "inline";
      document.getElementById("theme2").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //hide clicked button
      // document.getElementById("theme3").style.display = "inline";
      document.getElementById("theme3").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme4").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme41").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme42").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme43").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme5").style.display = "inline";
      document.getElementById("theme5").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      document.getElementById("theme6").style =
        "box-shadow: 0 0 0px var(--button_Color);"
*/
/*  removed to themeALL()
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "rgb(244, 67, 54)"
        element.style.borderColor = "rgb(244, 67, 54)"
        element.style.color = rootStyle.getPropertyValue("--font_color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "rgb(37, 211, 102)"
        element.style.borderColor = "rgb(37, 211, 102)"
        element.style.color = rootStyle.getPropertyValue(
          "--body_backgroundColor",
        )
      })
      // Access the first element in the NodeList
      classesBplus[0]


      //////////////////////////////////////////////////////////////
      //replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue(
        "--body_backgroundColor",
      )
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
      // console.log("actual_ CSS --button_Color: " + actual_button_Color);
      // console.log("actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor);
      //console.log("actual_ CSS --border_color: " + actual_border_color);

      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          //console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
*/
    } //end theme1

    function theme2() {

      root.style.setProperty(
        "--body_backgroundColor",
        rootStyle.getPropertyValue("--body_backgroundColor2"),
      )
      root.style.setProperty(
        "--font_color",
        rootStyle.getPropertyValue("--font_color2"),
      )
      root.style.setProperty(
        "--border_color",
        rootStyle.getPropertyValue("--border_color2"),
      )
      root.style.setProperty(
        "--th_backgroundColor",
        rootStyle.getPropertyValue("--th_backgroundColor2"),
      )
      root.style.setProperty(
        "--th_Color",
        rootStyle.getPropertyValue("--th_Color2"),
      )
      root.style.setProperty(
        "--button_Color",
        rootStyle.getPropertyValue("--button_Color2"),
      )

      root.style.setProperty(
        "--styleBorder_Color",
        rootStyle.getPropertyValue("--styleBorder_Color2"),
      )




      root.style.setProperty(
        "--button_pers_Color",
        rootStyle.getPropertyValue("--button_pers_Color2"),
      )
      root.style.setProperty(
        "--TABLE_border_color",
        rootStyle.getPropertyValue("--TABLE_border_color2"),
      )
      root.style.setProperty(
        "--TABLE_backgroundColor",
        rootStyle.getPropertyValue("--table_backgroundColor2"),
      )
  
/*  removed to themeALL()
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBplus[0]


      //////////////////////////////////////////////////////////////
      //replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      //zmenene lebo theme s black background dava black ako font - v theme2 orange ma border black a zle davalo,
      //font=border a to je zle
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue(
        "--body_backgroundColor",
      )
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
      console.log("2 actual_ CSS --button_Color: " + actual_button_Color);
      console.log("2 actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor);
      console.log("2 actual_ CSS --border_color: " + actual_border_color);

      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          //console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
*/
    } //end theme

    function theme3() {
      console.log('theme3   '+rootStyle.getPropertyValue("--button_pers_Color"));
      root.style.setProperty(
        "--body_backgroundColor",
        rootStyle.getPropertyValue("--body_backgroundColor3"),
      )
      root.style.setProperty(
        "--font_color",
        rootStyle.getPropertyValue("--font_color3"),
      )
      root.style.setProperty(
        "--border_color",
        rootStyle.getPropertyValue("--border_color3"),
      )
      root.style.setProperty(
        "--th_backgroundColor",
        rootStyle.getPropertyValue("--th_backgroundColor3"),
      )
      root.style.setProperty(
        "--th_Color",
        rootStyle.getPropertyValue("--th_Color3"),
      )
      root.style.setProperty(
        "--button_Color",
        rootStyle.getPropertyValue("--button_Color3"),
      )

      root.style.setProperty(
        "--button_pers_Color",
        rootStyle.getPropertyValue("--button_pers_Color3"),
      )
      root.style.setProperty(
        "--TABLE_border_color",
        rootStyle.getPropertyValue("--TABLE_border_color3"),
      )
      root.style.setProperty(
        "--TABLE_backgroundColor",
        rootStyle.getPropertyValue("--table_backgroundColor3"),
      )
/* nahradene buttons na radio a tam to mam nastavene v style
      //hide clicked button
      //document.getElementById("theme1").style.display = "inline";
      document.getElementById("theme1").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      //document.getElementById("theme2").style.display = "inline";
      document.getElementById("theme2").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme3").style.display = "none";
      document.getElementById("theme3").style =
        "width: 25px; height: 25px; box-shadow: 0 0 10px var(--button_Color);"

      // document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme4").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme41").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme42").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme43").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme5").style.display = "inline";
      document.getElementById("theme5").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      document.getElementById("theme6").style =
        "box-shadow: 0 0 0px var(--button_Color);"
*/
/*  removed to themeALL()
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBplus[0]

      //////////////////////////////////////////////////////////////
      //replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue(
        "--body_backgroundColor",
      )
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
      //console.log("actual_ CSS --button_Color: " + actual_button_Color);
      //console.log("actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor);
      //console.log("actual_ CSS --border_color: " + actual_border_color);

      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          //console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
*/
    } //end theme

    function theme4() {
      root.style.setProperty(
        "--body_backgroundColor",
        rootStyle.getPropertyValue("--body_backgroundColor4"),
      )
      root.style.setProperty(
        "--font_color",
        rootStyle.getPropertyValue("--font_color4"),
      )
      root.style.setProperty(
        "--border_color",
        rootStyle.getPropertyValue("--border_color4"),
      )
      root.style.setProperty(
        "--th_backgroundColor",
        rootStyle.getPropertyValue("--th_backgroundColor4"),
      )
      root.style.setProperty(
        "--th_Color",
        rootStyle.getPropertyValue("--th_Color4"),
      )
      root.style.setProperty(
        "--button_Color",
        rootStyle.getPropertyValue("--button_Color4"),
      )

      root.style.setProperty(
        "--button_pers_Color",
        rootStyle.getPropertyValue("--button_pers_Color4"),
      )
      root.style.setProperty(
        "--TABLE_border_color",
        rootStyle.getPropertyValue("--TABLE_border_color4"),
      )
      root.style.setProperty(
        "--TABLE_backgroundColor",
        rootStyle.getPropertyValue("--table_backgroundColor4"),
      )
/* nahradene buttons na radio a tam to mam nastavene v style
      //hide clicked button
      //document.getElementById("theme1").style.display = "inline";
      document.getElementById("theme1").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      //document.getElementById("theme2").style.display = "inline";
      document.getElementById("theme2").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme3").style.display = "inline";
      document.getElementById("theme3").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme4").style.display = "none";
      document.getElementById("theme4").style =
        "width: 25px; height: 25px; box-shadow: 0 0 10px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme41").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme42").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme43").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //	document.getElementById("theme5").style.display = "inline";
      document.getElementById("theme5").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      document.getElementById("theme6").style =
        "box-shadow: 0 0 0px var(--button_Color);"
*/
/*  removed to themeALL()
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBplus[0]

      //////////////////////////////////////////////////////////////
      //replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue(
        "--body_backgroundColor",
      )
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
      console.log("actual_ CSS --button_Color: " + actual_button_Color)
      console.log(
        "actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor,
      )
      console.log("actual_ CSS --border_color: " + actual_border_color)

      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          //console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
*/
    } //end theme

    function theme41() {
      root.style.setProperty(
        "--body_backgroundColor",
        rootStyle.getPropertyValue("--body_backgroundColor41"),
      )
      root.style.setProperty(
        "--font_color",
        rootStyle.getPropertyValue("--font_color41"),
      )
      root.style.setProperty(
        "--border_color",
        rootStyle.getPropertyValue("--border_color41"),
      )
      root.style.setProperty(
        "--th_backgroundColor",
        rootStyle.getPropertyValue("--th_backgroundColor41"),
      )
      root.style.setProperty(
        "--th_Color",
        rootStyle.getPropertyValue("--th_Color41"),
      )
      root.style.setProperty(
        "--button_Color",
        rootStyle.getPropertyValue("--button_Color41"),
      )

      root.style.setProperty(
        "--button_pers_Color",
        rootStyle.getPropertyValue("--button_pers_Color41"),
      )
      root.style.setProperty(
        "--TABLE_border_color",
        rootStyle.getPropertyValue("--TABLE_border_color41"),
      )
      root.style.setProperty(
        "--TABLE_backgroundColor",
        rootStyle.getPropertyValue("--table_backgroundColor41"),
      )
/* nahradene buttons na radio a tam to mam nastavene v style
      //hide clicked button
      //document.getElementById("theme1").style.display = "inline";
      document.getElementById("theme1").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      //document.getElementById("theme2").style.display = "inline";
      document.getElementById("theme2").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme3").style.display = "inline";
      document.getElementById("theme3").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme4").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme4").style.display = "none";
      document.getElementById("theme41").style =
        "width: 25px; height: 25px; box-shadow: 0 0 10px var(--button_Color);"
      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme42").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme43").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //	document.getElementById("theme5").style.display = "inline";
      document.getElementById("theme5").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      document.getElementById("theme6").style =
        "box-shadow: 0 0 0px var(--button_Color);"
*/
/*  removed to themeALL()
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBplus[0]


      //////////////////////////////////////////////////////////////
      //replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue(
        "--body_backgroundColor",
      )
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
      console.log("actual_ CSS --button_Color: " + actual_button_Color)
      console.log(
        "actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor,
      )
      console.log("actual_ CSS --border_color: " + actual_border_color)

      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          //console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
*/
    } //end theme

    function theme42() {
      root.style.setProperty(
        "--body_backgroundColor",
        rootStyle.getPropertyValue("--body_backgroundColor42"),
      )
      root.style.setProperty(
        "--font_color",
        rootStyle.getPropertyValue("--font_color42"),
      )
      root.style.setProperty(
        "--border_color",
        rootStyle.getPropertyValue("--border_color42"),
      )
      root.style.setProperty(
        "--th_backgroundColor",
        rootStyle.getPropertyValue("--th_backgroundColor42"),
      )
      root.style.setProperty(
        "--th_Color",
        rootStyle.getPropertyValue("--th_Color42"),
      )
      root.style.setProperty(
        "--button_Color",
        rootStyle.getPropertyValue("--button_Color42"),
      )

            root.style.setProperty(
        "--styleBorder_Color",
        rootStyle.getPropertyValue("--styleBorder_Color42"),
      )


      root.style.setProperty(
        "--button_pers_Color",
        rootStyle.getPropertyValue("--button_pers_Color42"),
      )
      root.style.setProperty(
        "--TABLE_border_color",
        rootStyle.getPropertyValue("--TABLE_border_color42"),
      )
      root.style.setProperty(
        "--TABLE_backgroundColor",
        rootStyle.getPropertyValue("--table_backgroundColor42"),
      )
/* nahradene buttons na radio a tam to mam nastavene v style
      //hide clicked button
      //document.getElementById("theme1").style.display = "inline";
      document.getElementById("theme1").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      //document.getElementById("theme2").style.display = "inline";
      document.getElementById("theme2").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme3").style.display = "inline";
      document.getElementById("theme3").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme4").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme41").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme4").style.display = "none";
      document.getElementById("theme42").style =
        "width: 25px; height: 25px; box-shadow: 0 0 10px var(--button_Color);"
      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme43").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //	document.getElementById("theme5").style.display = "inline";
      document.getElementById("theme5").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      document.getElementById("theme6").style =
        "box-shadow: 0 0 0px var(--button_Color);"
*/


/*  removed to themeALL()
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBplus[0]


      //////////////////////////////////////////////////////////////
      //replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue(
        "--body_backgroundColor",
      )
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
      console.log("actual_ CSS --button_Color: " + actual_button_Color)
      console.log(
        "actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor,
      )
      console.log("actual_ CSS --border_color: " + actual_border_color)

      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          //console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
*/
    } //end theme

    function theme43() {
      root.style.setProperty(
        "--body_backgroundColor",
        rootStyle.getPropertyValue("--body_backgroundColor43"),
      )
      root.style.setProperty(
        "--font_color",
        rootStyle.getPropertyValue("--font_color43"),
      )
      root.style.setProperty(
        "--border_color",
        rootStyle.getPropertyValue("--border_color43"),
      )
      root.style.setProperty(
        "--th_backgroundColor",
        rootStyle.getPropertyValue("--th_backgroundColor43"),
      )
      root.style.setProperty(
        "--th_Color",
        rootStyle.getPropertyValue("--th_Color43"),
      )
      root.style.setProperty(
        "--button_Color",
        rootStyle.getPropertyValue("--button_Color43"),
      )

      root.style.setProperty(
        "--button_pers_Color",
        rootStyle.getPropertyValue("--button_pers_Color43"),
      )
      root.style.setProperty(
        "--TABLE_border_color",
        rootStyle.getPropertyValue("--TABLE_border_color43"),
      )
      root.style.setProperty(
        "--TABLE_backgroundColor",
        rootStyle.getPropertyValue("--table_backgroundColor43"),
      )
/* nahradene buttons na radio a tam to mam nastavene v style
      //hide clicked button
      //document.getElementById("theme1").style.display = "inline";
      document.getElementById("theme1").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      //document.getElementById("theme2").style.display = "inline";
      document.getElementById("theme2").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme3").style.display = "inline";
      document.getElementById("theme3").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme4").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme41").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme42").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme4").style.display = "none";
      document.getElementById("theme43").style =
        "width: 25px; height: 25px; box-shadow: 0 0 10px var(--button_Color);"

      //	document.getElementById("theme5").style.display = "inline";
      document.getElementById("theme5").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      document.getElementById("theme6").style =
        "box-shadow: 0 0 0px var(--button_Color);"
*/

/*  removed to themeALL()
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBplus[0]

      //////////////////////////////////////////////////////////////
      //replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue(
        "--body_backgroundColor",
      )
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
      console.log("actual_ CSS --button_Color: " + actual_button_Color)
      console.log(
        "actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor,
      )
      console.log("actual_ CSS --border_color: " + actual_border_color)



      



      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          //console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
*/
    } //end theme

    function theme5() {
      root.style.setProperty(
        "--body_backgroundColor",
        rootStyle.getPropertyValue("--body_backgroundColor5"),
      )
      root.style.setProperty(
        "--font_color",
        rootStyle.getPropertyValue("--font_color5"),
      )
      root.style.setProperty(
        "--border_color",
        rootStyle.getPropertyValue("--border_color5"),
      )
      root.style.setProperty(
        "--th_backgroundColor",
        rootStyle.getPropertyValue("--th_backgroundColor5"),
      )
      root.style.setProperty(
        "--th_Color",
        rootStyle.getPropertyValue("--th_Color5"),
      )
      root.style.setProperty(
        "--button_Color",
        rootStyle.getPropertyValue("--button_Color5"),
      )
      root.style.setProperty(
        "--styleBorder_Color",
        rootStyle.getPropertyValue("--styleBorder_Color5"),
      )

      root.style.setProperty(
        "--button_pers_Color",
        rootStyle.getPropertyValue("--button_pers_Color51"),
      )
      root.style.setProperty(
        "--TABLE_border_color",
        rootStyle.getPropertyValue("--TABLE_border_color51"),
      )
      root.style.setProperty(
        "--TABLE_backgroundColor",
        rootStyle.getPropertyValue("--table_backgroundColor51"),
      )
/* nahradene buttons na radio a tam to mam nastavene v style
      //hide clicked button
      //document.getElementById("theme1").style.display = "inline";
      document.getElementById("theme1").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      // document.getElementById("theme2").style.display = "inline";
      document.getElementById("theme2").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme5").style.display = "none";
      document.getElementById("theme5").style =
        "width: 25px; height: 25px; box-shadow: 0 0 10px var(--button_Color);"

      //hide clicked button
      // document.getElementById("theme3").style.display = "inline";
      document.getElementById("theme3").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      // document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme4").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme41").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme42").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme43").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      document.getElementById("theme6").style =
        "box-shadow: 0 0 0px var(--button_Color);"
*/
/*  removed to themeALL()
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBplus[0]
  

      //////////////////////////////////////////////////////////////
      //replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue(
        "--body_backgroundColor",
      )
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
      console.log("actual_ CSS --button_Color: " + actual_button_Color)
      console.log(
        "actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor,
      )
      console.log("actual_ CSS --border_color: " + actual_border_color)

      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          //console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
*/
    } //end theme

    function theme6() {
      root.style.setProperty(
        "--body_backgroundColor",
        rootStyle.getPropertyValue("--body_backgroundColor6"),
      )
      root.style.setProperty(
        "--font_color",
        rootStyle.getPropertyValue("--font_color6"),
      )
      root.style.setProperty(
        "--border_color",
        rootStyle.getPropertyValue("--border_color6"),
      )
      root.style.setProperty(
        "--th_backgroundColor",
        rootStyle.getPropertyValue("--th_backgroundColor6"),
      )
      root.style.setProperty(
        "--th_Color",
        rootStyle.getPropertyValue("--th_Color6"),
      )
      root.style.setProperty(
        "--button_Color",
        rootStyle.getPropertyValue("--button_Color6"),
      )

      root.style.setProperty(
        "--button_pers_Color",
        rootStyle.getPropertyValue("--button_pers_Color6"),
      )
      root.style.setProperty(
        "--TABLE_border_color",
        rootStyle.getPropertyValue("--TABLE_border_color6"),
      )
      root.style.setProperty(
        "--TABLE_backgroundColor",
        rootStyle.getPropertyValue("--table_backgroundColor6"),
      )
      /* nahradene buttons na radio a tam to mam nastavene v style
      //hide clicked button
      //document.getElementById("theme1").style.display = "inline";
      document.getElementById("theme1").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //hide clicked button
      //document.getElementById("theme2").style.display = "none";
      document.getElementById("theme2").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //hide clicked button
      //document.getElementById("theme3").style.display = "inline";
      document.getElementById("theme3").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      // document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme4").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme41").style =
        "box-shadow: 0 0 0px var(--button_Color);"

      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme42").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //document.getElementById("theme4").style.display = "inline";
      document.getElementById("theme43").style =
        "box-shadow: 0 0 0px var(--button_Color);"
      //document.getElementById("theme5").style.display = "inline";
      document.getElementById("theme5").style =
        "box-shadow: 0 0 0px var(--button_Color);"
*/
/*  removed to themeALL()  
      document.getElementById("theme6").style =
        "width: 25px; height: 25px; box-shadow: 0 0 10px var(--button_Color);"

      
      //plus/minus button stenen per pers
      //access css via all classes / select all classes
      //https://www.digitalocean.com/community/tutorials/how-to-modify-attributes-classes-and-styles-in-the-dom
      const classesBminus = document.querySelectorAll(".Bminus")
      classesBminus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBminus[0]

      const classesBplus = document.querySelectorAll(".Bplus")
      classesBplus.forEach((element) => {
        element.style.backgroundColor = "transparent"
        element.style.borderColor =
          rootStyle.getPropertyValue("--button_Color")
        element.style.color = rootStyle.getPropertyValue("--button_Color")
      })
      // Access the first element in the NodeList
      classesBplus[0]


      //////////////////////////////////////////////////////////////
      //replace style of clicked pers buttons according new theme
      /////////////////////////////////////////////////////////////
      var actual_button_Color = rootStyle.getPropertyValue("--button_Color")
      var actual_body_backgroundColor = rootStyle.getPropertyValue(
        "--body_backgroundColor",
      )
      var actual_border_color = rootStyle.getPropertyValue("--border_color")
      //console.log("actual_ CSS --button_Color: " + actual_button_Color);
      //console.log("actual_ CSS --body_backgroundColor: " + actual_body_backgroundColor);
      //console.log("actual_ CSS --border_color: " + actual_border_color);

      //select all classes pers
      const classesPERS = document.querySelectorAll(".pers")
      classesPERS.forEach((element) => {
        //console.log('actual .pers button color is   :' + getComputedStyle(element).color)
        //console.log('actual .pers backgroundColor is   :' + getComputedStyle(element).backgroundColor);
        if (getComputedStyle(element).color == actual_border_color) {
          //console.log('.pers button is inactive=do nothing')
        } else if (
          getComputedStyle(element).backgroundColor ==
          actual_body_backgroundColor
        ) {
          //console.log('.pers button is checked 1=replace border and font color');
          element.style.color = actual_button_Color
          element.style.borderColor = actual_button_Color
        } else {
          //console.log('.pers button is checked 2=replace background color');
          element.style.color = actual_body_backgroundColor
          element.style.backgroundColor = actual_button_Color
          element.style.borderColor = actual_button_Color
        }
      })
      // Access the first element in the NodeList
      classesPERS[0]
*/
    } //end theme

    



    

  </script>
  
</body>

</html>
